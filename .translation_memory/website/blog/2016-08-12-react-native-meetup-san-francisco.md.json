{
  "source_file_path_relative_to_docusaurus_root": "blog/2016-08-12-react-native-meetup-san-francisco.md",
  "source_file_content_hash": "0a982389f1e2675493eec82a354b63f60a0aac6433f0de5b574d792bf14820ad",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: San Francisco Meetup Recap\nauthors: [hectorramos]\nhero: '/blog/img/rnmsf-august-2016-hero.jpg'\ntags: [events]\n---",
      "source_content_hash": "be5eaafff862548a2ee5236a76c401bcc545f20f232754f3e36ae51e0f624297",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Last week I had the opportunity to attend the [React Native Meetup](https://www.meetup.com/React-Native-San-Francisco/photos/27168649/#452793854) at Zynga’s San Francisco office. With around 200 people in attendance, it served as a great place to meet other developers near me that are also interested in React Native.",
      "source_content_hash": "3f25bd59d3ff527683fdf6f0e2f4b8d691241efb0f254e64cdf76b61e14e04c9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "上週我有幸參加了在Zynga舊金山辦公室舉辦的[React Native Meetup](https://www.meetup.com/React-Native-San-Francisco/photos/27168649/#452793854)。現場約有200人參與，這是一個絕佳的機會，讓我能認識附近同樣對React Native感興趣的開發者。"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "![](/blog/assets/rnmsf-august-2016-hero.jpg)",
      "source_content_hash": "66a4feb4c7baa7f4a2209672c2906e3bae6802296ba1f580ce72ed780d46d98e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-hero.jpg)"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "I was particularly interested in learning more about how React and React Native are used at companies like Zynga, Netflix, and Airbnb. The agenda for the night would be as follows:",
      "source_content_hash": "44f8d323ac2096e58534bcf16105537582164234941b6b5c47dfbe6f9b5b6178",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "我特別想深入了解像Zynga、Netflix和Airbnb這樣的公司是如何使用React和React Native的。當晚的議程如下："
      }
    },
    {
      "segment_id": "9e760345",
      "source_content": "- Rapid Prototyping in React\n- Designing APIs for React Native\n- Bridging the Gap: Using React Native in Existing Codebases",
      "source_content_hash": "db9d3d6ac17f79df3298de689ecd8de05f74f557d06f926b156cca1e2955a08b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 使用React進行快速原型開發\n- 為React Native設計API\n- 彌合差距：在現有代碼庫中使用React Native"
      }
    },
    {
      "segment_id": "39b3772c",
      "source_content": "But first, the event started off with a quick introduction and a brief recap of recent news:",
      "source_content_hash": "41b9610fc98b3759393cecbd56c1f457a95bcb27ad3f86e49f8aa3deeb777cc0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "但首先，活動以簡短的介紹和近期新聞回顧開場："
      }
    },
    {
      "segment_id": "3b695c37",
      "source_content": "- Did you know that React Native is now the [top Java repository on GitHub](https://twitter.com/jamespearce/status/759637111880359937)?\n- [rnpm](https://github.com/rnpm/rnpm) is now part of React Native core! You can now use `react-native link` in place of `rnpm link` to [install libraries with native dependencies](/docs/linking-libraries-ios).\n- The React Native Meetup community is growing fast! There are now over 4,800 developers across a variety of React Native meetup groups all over the globe.",
      "source_content_hash": "6b5d07202c59ef4f2622e8f4ec8a5c888f7e77ed2d20dc9a61d2d482bae05aab",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 你知道React Native現在是[GitHub上最受歡迎的Java倉庫](https://twitter.com/jamespearce/status/759637111880359937)嗎？\n- [rnpm](https://github.com/rnpm/rnpm)現在已成為React Native核心的一部分！你可以使用`react-native link`來替代`rnpm link`，以[安裝帶有原生依賴的庫](/docs/linking-libraries-ios)。\n- React Native Meetup社區正在迅速壯大！現在全球各地有超過4,800名開發者參與各種React Native Meetup小組。"
      }
    },
    {
      "segment_id": "98cfbd53",
      "source_content": "If [one of these meetups](https://www.meetup.com/find/?allMeetups=false&keywords=react+native&radius=Infinity&userFreeform=San+Francisco%2C+CA&mcId=z94105&mcName=San+Francisco%2C+CA&sort=recommended&eventFilter=mysugg) is held near you, I highly recommend attending!",
      "source_content_hash": "18c46c38714419c9076f4c55bfb8e3ace01f0344ffd02349ee98e84c11d73092",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果[這些Meetup](https://www.meetup.com/find/?allMeetups=false&keywords=react+native&radius=Infinity&userFreeform=San+Francisco%2C+CA&mcId=z94105&mcName=San+Francisco%2C+CA&sort=recommended&eventFilter=mysugg)在你附近舉辦，我強烈推薦參加！"
      }
    },
    {
      "segment_id": "79b2d0b9",
      "source_content": "## Rapid Prototyping in React at Zynga",
      "source_content_hash": "49a0444fbbec23f5252b58b1ce9124e1853e1772aa61b6bc3d04b4d590550565",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 在Zynga使用React進行快速原型開發"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "The first round of news was followed by a quick introduction by Zynga, our hosts for the evening. Abhishek Chadha talked about how they use React to quickly prototype new experiences on mobile, demoing a quick prototype of a Draw Something-like app. They use a similar approach as React Native, providing access to native APIs via a bridge. This was demonstrated when Abhishek used the device's camera to snap a photo of the audience and then drew a hat on someone's head.",
      "source_content_hash": "fab12702d13edfb3a24450a9895629675225d0b79a8196a6d1c82cad970174c2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "第一輪新聞之後，由我們當晚的主辦方Zynga做了簡短介紹。Abhishek Chadha談到了他們如何使用React在移動設備上快速原型開發新體驗，並演示了一個類似Draw Something的應用原型。他們採用了與React Native類似的方法，通過橋接提供對原生API的訪問。這一點在Abhishek使用設備相機拍攝觀眾照片並在某人的頭上畫了一頂帽子時得到了展示。"
      }
    },
    {
      "segment_id": "d06306f7",
      "source_content": "## Designing APIs for React Native at Netflix",
      "source_content_hash": "668cdaa808e38d222e11017396fec7de1953ce60bebb08913aaa4a77001f35bf",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 在Netflix為React Native設計API"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "Up next, the first featured talk of the evening. [Clarence Leung](https://twitter.com/clarler), Senior Software Engineer at Netflix, presented his talk on Designing APIs for React Native. First he noted the two main types of libraries one may work on: components such as tab bars and date pickers, and libraries that provide access to native services such as the camera roll or in-app payments. There are two ways one may approach when building a library for use in React Native:",
      "source_content_hash": "57fb963c2615e71569624d00f38b9ab9ae3463d0a3edcb728a1218f64c651232",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "接下來是當晚的第一場主題演講。Netflix的高級軟件工程師[Clarence Leung](https://twitter.com/clarler)帶來了關於為React Native設計API的演講。他首先指出，開發者可能會接觸到的兩類主要庫：一是像標籤欄和日期選擇器這樣的組件，二是提供對原生服務（如相冊或應用內支付）訪問的庫。在為React Native構建庫時，有兩種主要方法："
      }
    },
    {
      "segment_id": "f2c8a42b",
      "source_content": "- Provide platform-specific components\n- A cross-platform library with a similar API for both Android and iOS",
      "source_content_hash": "36ed779c15e0b0bdc1cd4266c1e4082d443e1bff2d0d2e165a787511b0c50ce3",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 提供特定於平台的組件\n- 構建一個跨平台庫，為Android和iOS提供相似的API"
      }
    },
    {
      "segment_id": "97ae4a01",
      "source_content": "Each approach has its own considerations, and it’s up to you to determine what works best for your needs.",
      "source_content_hash": "34ebfd5c87a0aa2c1c1177a3e94fd77acc7930f5036fb8fca63626fa30cdc5e9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "每種方法都有其考量，你需要根據自己的需求來決定哪種方式最適合。"
      }
    },
    {
      "segment_id": "c3a738de",
      "source_content": "**Approach #1**",
      "source_content_hash": "274e0263cc6617c9af177e663781438147ded2cfbe67bc769789cc203c03ea9c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**方法一**"
      }
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "As an example of platform-specific components, Clarence talked about the DatePickerIOS and DatePickerAndroid from core React Native. On iOS, date pickers are rendered as part of the UI and can be easily embedded in an existing view, while date pickers on Android are presented modally. It makes sense to provide separate components in this case.",
      "source_content_hash": "d0778ceb9bf4d9aff6bd71230c4e9434a196f26a3ba6ecb7a2685b5042b9136b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "作為特定於平台組件的例子，Clarence談到了React Native核心中的DatePickerIOS和DatePickerAndroid。在iOS上，日期選擇器是作為UI的一部分渲染的，可以輕鬆嵌入現有視圖中，而在Android上，日期選擇器是以模態方式呈現的。在這種情況下，提供獨立的組件是有意義的。"
      }
    },
    {
      "segment_id": "1042b50d",
      "source_content": "**Approach #2**",
      "source_content_hash": "9fc5ab058795cb67371bb7aa558cb0c6ea53e2c7e1fdaf91a2be1249f096635b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**方法二**"
      }
    },
    {
      "segment_id": "aa1e7006",
      "source_content": "Photo pickers, on the other hand, are treated similarly on Android and iOS. There are some slight differences — Android does not group photos into folders like iOS does with Selfies, for example — but those are easily handled using `if` statements and the `Platform` component.",
      "source_content_hash": "0100b507a5a448e3df53e597c0cd9b100e59f485be5beb6834f4f1fcbac4d8ec",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "另一方面，照片選擇器在Android和iOS上的處理方式相似。雖然有一些細微差別——例如，Android不會像iOS那樣將照片分組到「自拍」等文件夾中——但這些可以輕鬆通過`if`語句和`Platform`組件來處理。"
      }
    },
    {
      "segment_id": "13d9cd70",
      "source_content": "Regardless of which approach you settle on, it’s a good idea to minimize the API surface and build app-specific libraries. For example, iOS’s In-App Purchase framework supports one-time, consumable purchases, as well as renewable subscriptions. If your app will only need to support consumable purchases, you may get away with dropping support for subscriptions in your cross-platform library.",
      "source_content_hash": "2a438b8d55aaedf9d12461531441e9fab059fb27f2d876a13e93975eda5feed2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "無論您最終選擇哪種方法，最小化API表面積並構建應用特定的函式庫都是個好主意。舉例來說，iOS的應用內購買框架支援一次性消費性購買與可續訂訂閱。如果您的應用只需要支援消費性購買，或許可以在跨平台函式庫中直接捨棄訂閱功能。"
      }
    },
    {
      "segment_id": "29528c8d",
      "source_content": "![](/blog/assets/rnmsf-august-2016-netflix.jpg)",
      "source_content_hash": "67e174e48e0e74e3537b1d2e291d86bcbdaab75e36d45a39808187331e04abd2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-netflix.jpg)"
      }
    },
    {
      "segment_id": "c504c207",
      "source_content": "There was a brief Q&A session at the end of Clarence’s talk. One of the interesting tid bits that came out of it was that around 80% of the React Native code written for these libraries at Netflix is shared across both Android and iOS.",
      "source_content_hash": "1d7ce0e54cf7c3383b45e50100048d1d263022f2e1058741f2308f0909da6ff0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Clarence的演講結束後進行了簡短的問答環節。其中一個有趣的細節是，Netflix為這些函式庫編寫的React Native程式碼中，約有80%可在Android和iOS平台共用。"
      }
    },
    {
      "segment_id": "c6cc90a0",
      "source_content": "## Bridging the Gap, Using React Native in Existing Codebases",
      "source_content_hash": "e6472bde952d6e02df49d1c658b267c64d9daacfb6a91d17ac093695108be373",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 彌合鴻溝：在現有程式碼庫中使用React Native"
      }
    },
    {
      "segment_id": "d3649a1e",
      "source_content": "The final talk of the night was by [Leland Richardson](https://twitter.com/intelligibabble) from Airbnb. The talk was focused on the use of React Native in existing codebases. I already know how easy it is to write a new app from scratch using React Native, so I was very interested to hear about Airbnb’s experience adopting React Native in their existing native apps.",
      "source_content_hash": "de3292eb7205e2868d1a472c20a68154900a7d4d10bb5af66e39bc30a3c44231",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當晚最後一場演講由Airbnb的[Leland Richardson](https://twitter.com/intelligibabble)主講，聚焦於如何在現有程式碼庫中整合React Native。我深知從零開始用React Native開發新應用有多簡單，因此對Airbnb在既有原生應用中採用React Native的經驗特別感興趣。"
      }
    },
    {
      "segment_id": "4d52a261",
      "source_content": "Leland started off by talking about greenfield apps versus brownfield apps. Greenfield means to start a project without the need to consider any prior work. This is in contrast to brownfield projects where you need to take into account the existing project’s requirements, development processes, and all of the teams various needs.",
      "source_content_hash": "fcaa1b63cffd334035648bf4a204286ad65791e2c3abf03b5eee6dd5347f164e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Leland首先談到「綠地開發」與「棕地開發」的區別。綠地開發意指無需考慮既有架構的全新專案，而棕地專案則需考量現有專案需求、開發流程及各團隊的不同需求。"
      }
    },
    {
      "segment_id": "23dfb152",
      "source_content": "When you’re working on a greenfield app, the React Native CLI sets up a single repository for both Android and iOS and everything just works. The first challenge against using React Native at Airbnb was the fact that the Android and iOS app each had their own repository. Multi-repo companies have some hurdles to get past before they can adopt React Native.",
      "source_content_hash": "89a6ac195ad52d5ae598b4bed63ce1aaa5345c6b875f6df490ddce829c13bc5d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "進行綠地開發時，React Native CLI會自動建立同時包含Android和iOS的單一儲存庫，一切都能無縫運作。Airbnb採用React Native的第一個挑戰在於：他們的Android與iOS應用原本各自擁有獨立儲存庫。採用多儲存庫架構的公司，在導入React Native前必須先克服這個障礙。"
      }
    },
    {
      "segment_id": "1131ef75",
      "source_content": "To get around this, Airbnb first set up a new repo for the React Native codebase. They used their continuous integration servers to mirror the Android and iOS repos into this new repo. After tests are run and the bundle is built, the build artifacts are synced back to the Android and iOS repos. This allows the mobile engineers to work on native code without altering their development environment. Mobile engineers don't need to install npm, run the packager, or remember to build the JavaScript bundle. The engineers writing actual React Native code do not have to worry about syncing their code across Android and iOS, as they work on the React Native repository directly.",
      "source_content_hash": "e2e18da60acc38dc8df2c53c168d16fd13a2219f740861a3bb7014f13a8c5f8f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "為解決此問題，Airbnb先為React Native程式碼建立了新儲存庫。他們透過持續整合伺服器，將Android和iOS儲存庫的內容鏡像至此新儲存庫。在測試執行與套件組合建置完成後，建置產出物會同步回傳至Android與iOS儲存庫。這種做法讓行動工程師能在不改變開發環境的情況下處理原生程式碼，無需安裝npm、啟動封包伺服器或手動建置JavaScript套件組合。而實際編寫React Native程式碼的工程師，則因直接操作React Native儲存庫，無需擔心跨平台同步問題。"
      }
    },
    {
      "segment_id": "8b2a52b1",
      "source_content": "This does come with some drawbacks, mainly they could not ship atomic updates. Changes that require a combination of native and JavaScript code would require three separate pull requests, all of which had to be carefully landed. In order to avoid conflicts, CI will fail to land changes back to the Android and iOS repos if master has changed since the build started. This would cause long delays during high commit frequency days (such as when new releases are cut).",
      "source_content_hash": "816c36160181698208b28da8da7879ae59d696d13da2526a8dd6abf47ca5011c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這種做法存在明顯缺點：無法進行原子性更新。需要同時修改原生與JavaScript程式碼的變更，必須提交三個獨立拉取請求，且都需謹慎合併。為避免衝突，當主分支在建置期間發生變更時，持續整合系統會阻止將變更回傳至Android與iOS儲存庫。這在提交頻率高的時段（例如發布新版本時）會導致嚴重延遲。"
      }
    },
    {
      "segment_id": "5dae11e3",
      "source_content": "Airbnb has since moved to a mono repo approach. Fortunately this was already under consideration, and once the Android and iOS teams became comfortable with using React Native they were happy to accelerate the move towards the mono repo.",
      "source_content_hash": "be9df80264d481439da159410a0cf042e67cf7b3b117fc1f37ffaf6f17f43a8a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Airbnb後續已轉向單一儲存庫架構。幸運的是此方案原本就在考量中，當Android與iOS團隊熟悉React Native後，便順利加速了轉換進程。"
      }
    },
    {
      "segment_id": "0bb95128",
      "source_content": "This has solved most of the issues they had with the split repo approach. Leland did note that this does cause a higher strain on the version control servers, which may be an issue for smaller companies.",
      "source_content_hash": "4b63dbfc15f04c2e9db1c1415b20ecb94510a97e3534b67673d025328b9bb2be",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這解決了多數分散式儲存庫帶來的問題。Leland也指出，此做法會對版本控制伺服器造成較大負荷，對規模較小的公司可能是個問題。"
      }
    },
    {
      "segment_id": "657c2b20",
      "source_content": "![](/blog/assets/rnmsf-august-2016-airbnb.jpg)",
      "source_content_hash": "23c289614f56fce3456348057cd4276521de9ccfc2a7ed06301691d2e9a02cea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-airbnb.jpg)"
      }
    },
    {
      "segment_id": "52388877",
      "source_content": "### The Navigation Problem",
      "source_content_hash": "8ed705c795fa5931b8150cda9ac7c8e3f02b62e433193af3de1a54cdcf662eda",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 導航難題"
      }
    },
    {
      "segment_id": "eab056be",
      "source_content": "The second half of Leland's talk focused on a topic that is dear to me: the Navigation problem in React Native. He talked about the abundance of navigation libraries in React Native, both first party and third party. NavigationExperimental was mentioned as something that seemed promising, but ended up not being well suited for their use case.",
      "source_content_hash": "fccaa5835b73857b2abde59528ec14803de6544da6f1c61f265fbe5674a65ad8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "演講後半段聚焦於React Native的核心議題：導航系統的解決方案。Leland探討了React Native生態中眾多的導航函式庫（包括官方與第三方方案），提到NavigationExperimental雖看似前景看好，最終卻不符合他們的用例需求。"
      }
    },
    {
      "segment_id": "f01228d3",
      "source_content": "In fact, none of the existing navigation libraries seem to work well for brownfield apps. A brownfield app requires that the navigation state be fully owned by the native app. For example, if a user’s session expires while a React Native view is being presented, the native app should be able to take over and present a login screen as needed.",
      "source_content_hash": "905ba478e643ad6b037d5796888df6a61ad02befab7b673ad0ca1d6fcda75ac4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "事實上，現有導航函式庫皆無法完美支援棕地應用。這類應用要求導航狀態必須完全由原生應用掌控。例如當使用者在React Native視圖中操作時，若會話突然過期，原生應用必須能立即接管並彈出登入畫面。"
      }
    },
    {
      "segment_id": "afa378f7",
      "source_content": "Airbnb also wanted to avoid replacing native navigation bars with JavaScript versions as part of a transition, as the effect could be jarring. Initially they limited themselves to modally presented views, but this obviously presented a problem when it came to adopting React Native more widely within their apps.",
      "source_content_hash": "2f8c4397ef3f933afbd68ff8b55979dec82cb5fa9e58c8e109b33a6f523abac9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Airbnb 也希望能避免在過渡期間以 JavaScript 版本取代原生導覽列，因為效果可能會顯得突兀。起初他們將應用範圍限制在模態呈現的視圖，但這顯然在更廣泛採用 React Native 時會產生問題。"
      }
    },
    {
      "segment_id": "e8e162a9",
      "source_content": "They decided that they needed their own library. The library is called `airbnb-navigation`. The library has not yet being open sourced as it is strongly tied to Airbnb’s codebase, but it is something they’d like to release by the end of the year.",
      "source_content_hash": "6a0942a1278ae656a901eeeeba28b536b2717796143da4e726f65d54c52d546a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "他們決定需要開發自己的函式庫，該庫命名為 `airbnb-navigation`。由於與 Airbnb 程式碼庫高度耦合，目前尚未開源，但他們希望能在年底前發布。"
      }
    },
    {
      "segment_id": "463ed165",
      "source_content": "I won’t go into much detail into the library’s API, but here are some of the key takeaways:",
      "source_content_hash": "bf553388d38eb47fb4ef3c378210366867691a775e5be021c63da4d018fa1650",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "以下簡要說明該函式庫 API 的關鍵設計要點："
      }
    },
    {
      "segment_id": "536b7b6b",
      "source_content": "- One must preregister scenes ahead of time\n- Each scene is displayed within its own `RCTRootView`. They are presented natively on each platform (e.g. `UINavigationController`s are used on iOS).\n- The main `ScrollView` in a scene should be wrapped in a `ScrollScene` component. Doing so allows you to take advantage of native behaviors such as tapping on the status bar to scroll to the top on iOS.\n- Transitions between scenes are handled natively, no need to worry about performance.\n- The Android back button is automatically supported.\n- They can take advantage of View Controller based navigation bar styling via a Navigator.Config UI-less component.",
      "source_content_hash": "6cfbbe47c38af4d339eafc8761dc8674c7660d9fbdf302c4d32c94b76a115730",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 需預先註冊所有場景\n- 每個場景均以獨立 `RCTRootView` 呈現，各平台使用原生元件（例如 iOS 採用 `UINavigationController`）\n- 場景中的主 `ScrollView` 需包裹於 `ScrollScene` 元件內，可繼承原生行為（如 iOS 點擊狀態列返回頂部）\n- 場景轉場由原生處理，無需擔心效能問題\n- 自動支援 Android 返回鍵\n- 透過無 UI 的 Navigator.Config 元件，可實現基於 View Controller 的導覽列樣式控制"
      }
    },
    {
      "segment_id": "0750bfa1",
      "source_content": "There’s also some considerations to keep in mind:",
      "source_content_hash": "e770366d968c1cb5fe669b2fe5ad7f24835afe71fbf879d53fd0cedbf7860e76",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "需注意的設計限制："
      }
    },
    {
      "segment_id": "2fc7ec55",
      "source_content": "- The navigation bar is not easily customized in JavaScript, as it is a native component. This is intentional, as using native navigation bars is a hard requirement for this type of library.\n- ScreenProps must be serialized/de-serialized whenever they're sent through the bridge, so care must be taken if sending too much data here.\n- Navigation state is owned by the native app (also a hard requirement for the library), so things like Redux cannot manipulate navigation state.",
      "source_content_hash": "157ab619f6a346a30cec90c44a91e35c3b4286184a3fe757e07de6cda4e024ea",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 導覽列難以用 JavaScript 自訂（因屬原生元件），此為刻意設計以符合嚴格的導覽列原生需求\n- 經橋接傳遞的 ScreenProps 需序列化/反序列化，傳輸大量數據時須謹慎\n- 導覽狀態由原生應用掌控（核心需求），因此 Redux 等工具無法操作導覽狀態"
      }
    },
    {
      "segment_id": "a311e967",
      "source_content": "Leland's talk was also followed by a Q&A session. Overall, Airbnb is satisfied with React Native. They’re interested in using Code Push to fix any issues without going through the App Store, and their engineers love Live Reload, as they don't have to wait for the native app to be rebuilt after every minor change.",
      "source_content_hash": "26933e9bfb050be849c5af43538e32604ec55865c918565fc81f4bc8e99a439d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "問答環節中，Leland 表示 Airbnb 對 React Native 整體滿意。團隊對 Code Push 的熱修復機制感興趣，工程師也喜愛 Live Reload 功能帶來的開發效率提升。"
      }
    },
    {
      "segment_id": "f8edb6d2",
      "source_content": "## Closing Remarks",
      "source_content_hash": "3415c8edd6297483f5faa2e5d9a3412f3c22947784eb6677959db99611a1d8d8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 活動總結"
      }
    },
    {
      "segment_id": "1862c5fe",
      "source_content": "The event ended with some additional React Native news:",
      "source_content_hash": "9a9250114953e260cb34ff2fc573fd0f20543811acde07cca1fcf7e98df85e48",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "活動尾聲分享的 React Native 相關動態："
      }
    },
    {
      "segment_id": "2d15468d",
      "source_content": "- Deco announced their [React Native Showcase](https://www.decosoftware.com/showcase), and invited everyone to add their app to the list.\n- The recent [documentation overhaul](/blog/2016/07/06/toward-better-documentation) got a shoutout!\n- Devin Abbott, one of the creators of Deco IDE, will be teaching an introductory [React Native course](https://www.decosoftware.com/course).",
      "source_content_hash": "27842e81a2da7e53c0a3fa79042ff8d762db34b2c348556cd06e279317ca9780",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- Deco 宣布推出 [React Native 應用展示牆](https://www.decosoftware.com/showcase)，邀請與會者提交作品\n- 特別提及近期完成的[文件全面改版](/blog/2016/07/06/toward-better-documentation)\n- Deco IDE 共同創建者 Devin Abbott 將開設 [React Native 入門課程](https://www.decosoftware.com/course)"
      }
    },
    {
      "segment_id": "c1eaf30b",
      "source_content": "![](/blog/assets/rnmsf-august-2016-docs.jpg)",
      "source_content_hash": "09ffbe7543438f15e27c70980cafed435efcde37a02a8b998ab957e8475bd6f8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-docs.jpg)"
      }
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "Meetups provide a good opportunity to meet and learn from other developers in the community. I'm looking forward to attending more React Native meetups in the future. If you make it up to one of these, please look out for me and let me know how we can make React Native work better for you!",
      "source_content_hash": "defda9203e0e522335a9d61575d17cc0721e5af2d1355370c7eabb6035a97681",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "技術社群聚會是交流學習的絕佳場合。期待未來參與更多 React Native 活動，若您也參與其中，歡迎交流使用體驗與改進建議！"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2016-08-12-react-native-meetup-san-francisco.md",
  "last_updated_timestamp": "2025-06-18T18:19:07.205467+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "0a982389f1e2675493eec82a354b63f60a0aac6433f0de5b574d792bf14820ad"
  }
}